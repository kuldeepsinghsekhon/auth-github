import { withAuth } from "next-auth/middleware"
import { NextResponse } from "next/server"

export default withAuth(
  function middleware(req) {
    const token = req.nextauth.token
    const path = req.nextUrl.pathname

    // Public routes (guest access)
    const publicRoutes = [
      '/auth/signin',
      '/auth/signup',
      '/auth/forgot-password'
    ]
    
    if (publicRoutes.includes(path)) {
      return NextResponse.next()
    }

    // Protect admin routes
    if (path.startsWith('/dashboard/admin') && token?.role !== 'admin') {
      return NextResponse.redirect(new URL('/auth/signin', req.url))
    }

    // Protect customer routes
    if (path.startsWith('/dashboard') && token?.role === 'guest') {
      return NextResponse.redirect(new URL('/auth/signin', req.url))
    }

    return NextResponse.next()
  },
  {
    callbacks: {
      authorized: ({ token }) => !!token
    }
  }
)

export const config = {
  matcher: [
    '/dashboard/:path*',
   // '/auth/:path*'
  ]
}